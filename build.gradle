plugins {
    // Required for NeoGradle
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"

    // Required for Forgix
    id "io.github.pacifistmc.forgix" version "1.2.7"
}

forgix {
    group = "${project.group}" // same as targetting ${group}, just not sure if expandProps occurs before this
    mergedJarName = "${mod_id}-merged-${minecraft_version}-${project.version}.jar"
    outputDir = "build/libs"

    custom {
        projectName = "common"
        jarLocation = "build/libs/${mod_id}-common-${minecraft_version}-${project.version}.jar"
    }

    fabric {
        projectName = "fabric"
        jarLocation = "build/libs/${mod_id}-fabric-${minecraft_version}-${project.version}.jar"
    }

//    forge {
//        projectName = "forge"
//        jarLocation = "build/libs/${mod_id}-forge-${minecraft_version}-${project.version}.jar"
//
//        mixin "${mod_id}.forge.mixins.json"
//    }

    neoforge {
        projectName = "neoforge"
        jarLocation = "build/libs/${mod_id}-neoforge-${minecraft_version}-${project.version}.jar"

        mixin "${mod_id}.neoforge.mixins.json"
    }
}

subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
        
    jar {
        manifest {
            attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : project.jar.archiveVersion,
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Timestamp'               : System.currentTimeMillis(),
                'Built-On-Java'           : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                'Built-On-Minecraft'      : minecraft_version
            ])
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }
    }

    tasks.withType(JavaCompile).configureEach {
    
        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }

    processResources {
        def expandProps = [
                "version": version,
                "group": project.group, //Else we target the task's group.
                "minecraft_version": minecraft_version,
                "forge_version": forge_version,
                "forge_loader_version_range": forge_loader_version_range,
                "forge_version_range": forge_version_range,
                "minecraft_version_range": minecraft_version_range,
                "fabric_version": fabric_version,
                "fabric_loader_version": fabric_loader_version,
                "mod_name": mod_name,
                "mod_author": mod_author,
                "mod_id": mod_id,
                "license": license,
                "description": project.description,
                "neoforge_version": neoforge_version,
                "neoforge_loader_version_range": neoforge_loader_version_range,
                "credits": credits
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', 'META-INF/mods.toml', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {

        enabled = false
    }
}
